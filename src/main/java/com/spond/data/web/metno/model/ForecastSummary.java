/*
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spond.data.web.metno.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.spond.data.web.metno.model.WeatherSymbol;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.processing.Generated;

/**
 * Summary of weather conditions.
 */
@ApiModel(description = "Summary of weather conditions.")
@JsonPropertyOrder({
  ForecastSummary.JSON_PROPERTY_SYMBOL_CODE
})
@Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-09T15:59:38.720538+02:00[Europe/Oslo]")
public class ForecastSummary {
  public static final String JSON_PROPERTY_SYMBOL_CODE = "symbol_code";
  private WeatherSymbol symbolCode;


  public ForecastSummary symbolCode(WeatherSymbol symbolCode) {
    
    this.symbolCode = symbolCode;
    return this;
  }

   /**
   * Get symbolCode
   * @return symbolCode
  **/
  @ApiModelProperty(required = true, value = "", example = "clearsky_day")
  @JsonProperty(JSON_PROPERTY_SYMBOL_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WeatherSymbol getSymbolCode() {
    return symbolCode;
  }


  public void setSymbolCode(WeatherSymbol symbolCode) {
    this.symbolCode = symbolCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastSummary forecastSummary = (ForecastSummary) o;
    return Objects.equals(this.symbolCode, forecastSummary.symbolCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbolCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastSummary {\n");
    sb.append("    symbolCode: ").append(toIndentedString(symbolCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

