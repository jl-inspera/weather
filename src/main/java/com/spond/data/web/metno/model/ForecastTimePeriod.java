/*
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spond.data.web.metno.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.processing.Generated;

/**
 * Weather parameters valid for a specified time period.
 */
@ApiModel(description = "Weather parameters valid for a specified time period.")
@JsonPropertyOrder({
  ForecastTimePeriod.JSON_PROPERTY_AIR_TEMPERATURE_MAX,
  ForecastTimePeriod.JSON_PROPERTY_AIR_TEMPERATURE_MIN,
  ForecastTimePeriod.JSON_PROPERTY_PRECIPITATION_AMOUNT,
  ForecastTimePeriod.JSON_PROPERTY_PRECIPITATION_AMOUNT_MAX,
  ForecastTimePeriod.JSON_PROPERTY_PRECIPITATION_AMOUNT_MIN,
  ForecastTimePeriod.JSON_PROPERTY_PROBABILITY_OF_PRECIPITATION,
  ForecastTimePeriod.JSON_PROPERTY_PROBABILITY_OF_THUNDER,
  ForecastTimePeriod.JSON_PROPERTY_ULTRAVIOLET_INDEX_CLEAR_SKY_MAX
})
@Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-09T15:59:38.720538+02:00[Europe/Oslo]")
public class ForecastTimePeriod {
  public static final String JSON_PROPERTY_AIR_TEMPERATURE_MAX = "air_temperature_max";
  private BigDecimal airTemperatureMax;

  public static final String JSON_PROPERTY_AIR_TEMPERATURE_MIN = "air_temperature_min";
  private BigDecimal airTemperatureMin;

  public static final String JSON_PROPERTY_PRECIPITATION_AMOUNT = "precipitation_amount";
  private BigDecimal precipitationAmount;

  public static final String JSON_PROPERTY_PRECIPITATION_AMOUNT_MAX = "precipitation_amount_max";
  private BigDecimal precipitationAmountMax;

  public static final String JSON_PROPERTY_PRECIPITATION_AMOUNT_MIN = "precipitation_amount_min";
  private BigDecimal precipitationAmountMin;

  public static final String JSON_PROPERTY_PROBABILITY_OF_PRECIPITATION = "probability_of_precipitation";
  private BigDecimal probabilityOfPrecipitation;

  public static final String JSON_PROPERTY_PROBABILITY_OF_THUNDER = "probability_of_thunder";
  private BigDecimal probabilityOfThunder;

  public static final String JSON_PROPERTY_ULTRAVIOLET_INDEX_CLEAR_SKY_MAX = "ultraviolet_index_clear_sky_max";
  private BigDecimal ultravioletIndexClearSkyMax;


  public ForecastTimePeriod airTemperatureMax(BigDecimal airTemperatureMax) {
    
    this.airTemperatureMax = airTemperatureMax;
    return this;
  }

   /**
   * Maximum air temperature in period
   * @return airTemperatureMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "17.1", value = "Maximum air temperature in period")
  @JsonProperty(JSON_PROPERTY_AIR_TEMPERATURE_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAirTemperatureMax() {
    return airTemperatureMax;
  }


  public void setAirTemperatureMax(BigDecimal airTemperatureMax) {
    this.airTemperatureMax = airTemperatureMax;
  }


  public ForecastTimePeriod airTemperatureMin(BigDecimal airTemperatureMin) {
    
    this.airTemperatureMin = airTemperatureMin;
    return this;
  }

   /**
   * Minimum air temperature in period
   * @return airTemperatureMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11.1", value = "Minimum air temperature in period")
  @JsonProperty(JSON_PROPERTY_AIR_TEMPERATURE_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAirTemperatureMin() {
    return airTemperatureMin;
  }


  public void setAirTemperatureMin(BigDecimal airTemperatureMin) {
    this.airTemperatureMin = airTemperatureMin;
  }


  public ForecastTimePeriod precipitationAmount(BigDecimal precipitationAmount) {
    
    this.precipitationAmount = precipitationAmount;
    return this;
  }

   /**
   * Best estimate for amount of precipitation for this period
   * @return precipitationAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.71", value = "Best estimate for amount of precipitation for this period")
  @JsonProperty(JSON_PROPERTY_PRECIPITATION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrecipitationAmount() {
    return precipitationAmount;
  }


  public void setPrecipitationAmount(BigDecimal precipitationAmount) {
    this.precipitationAmount = precipitationAmount;
  }


  public ForecastTimePeriod precipitationAmountMax(BigDecimal precipitationAmountMax) {
    
    this.precipitationAmountMax = precipitationAmountMax;
    return this;
  }

   /**
   * Maximum amount of precipitation for this period
   * @return precipitationAmountMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4.32", value = "Maximum amount of precipitation for this period")
  @JsonProperty(JSON_PROPERTY_PRECIPITATION_AMOUNT_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrecipitationAmountMax() {
    return precipitationAmountMax;
  }


  public void setPrecipitationAmountMax(BigDecimal precipitationAmountMax) {
    this.precipitationAmountMax = precipitationAmountMax;
  }


  public ForecastTimePeriod precipitationAmountMin(BigDecimal precipitationAmountMin) {
    
    this.precipitationAmountMin = precipitationAmountMin;
    return this;
  }

   /**
   * Minimum amount of precipitation for this period
   * @return precipitationAmountMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4.32", value = "Minimum amount of precipitation for this period")
  @JsonProperty(JSON_PROPERTY_PRECIPITATION_AMOUNT_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrecipitationAmountMin() {
    return precipitationAmountMin;
  }


  public void setPrecipitationAmountMin(BigDecimal precipitationAmountMin) {
    this.precipitationAmountMin = precipitationAmountMin;
  }


  public ForecastTimePeriod probabilityOfPrecipitation(BigDecimal probabilityOfPrecipitation) {
    
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
    return this;
  }

   /**
   * Probability of any precipitation coming for this period
   * @return probabilityOfPrecipitation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "37.0", value = "Probability of any precipitation coming for this period")
  @JsonProperty(JSON_PROPERTY_PROBABILITY_OF_PRECIPITATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProbabilityOfPrecipitation() {
    return probabilityOfPrecipitation;
  }


  public void setProbabilityOfPrecipitation(BigDecimal probabilityOfPrecipitation) {
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
  }


  public ForecastTimePeriod probabilityOfThunder(BigDecimal probabilityOfThunder) {
    
    this.probabilityOfThunder = probabilityOfThunder;
    return this;
  }

   /**
   * Probability of any thunder coming for this period
   * @return probabilityOfThunder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "54.32", value = "Probability of any thunder coming for this period")
  @JsonProperty(JSON_PROPERTY_PROBABILITY_OF_THUNDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProbabilityOfThunder() {
    return probabilityOfThunder;
  }


  public void setProbabilityOfThunder(BigDecimal probabilityOfThunder) {
    this.probabilityOfThunder = probabilityOfThunder;
  }


  public ForecastTimePeriod ultravioletIndexClearSkyMax(BigDecimal ultravioletIndexClearSkyMax) {
    
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
    return this;
  }

   /**
   * Maximum ultraviolet index if sky is clear
   * @return ultravioletIndexClearSkyMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.0", value = "Maximum ultraviolet index if sky is clear")
  @JsonProperty(JSON_PROPERTY_ULTRAVIOLET_INDEX_CLEAR_SKY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUltravioletIndexClearSkyMax() {
    return ultravioletIndexClearSkyMax;
  }


  public void setUltravioletIndexClearSkyMax(BigDecimal ultravioletIndexClearSkyMax) {
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastTimePeriod forecastTimePeriod = (ForecastTimePeriod) o;
    return Objects.equals(this.airTemperatureMax, forecastTimePeriod.airTemperatureMax) &&
        Objects.equals(this.airTemperatureMin, forecastTimePeriod.airTemperatureMin) &&
        Objects.equals(this.precipitationAmount, forecastTimePeriod.precipitationAmount) &&
        Objects.equals(this.precipitationAmountMax, forecastTimePeriod.precipitationAmountMax) &&
        Objects.equals(this.precipitationAmountMin, forecastTimePeriod.precipitationAmountMin) &&
        Objects.equals(this.probabilityOfPrecipitation, forecastTimePeriod.probabilityOfPrecipitation) &&
        Objects.equals(this.probabilityOfThunder, forecastTimePeriod.probabilityOfThunder) &&
        Objects.equals(this.ultravioletIndexClearSkyMax, forecastTimePeriod.ultravioletIndexClearSkyMax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airTemperatureMax, airTemperatureMin, precipitationAmount, precipitationAmountMax, precipitationAmountMin, probabilityOfPrecipitation, probabilityOfThunder, ultravioletIndexClearSkyMax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastTimePeriod {\n");
    sb.append("    airTemperatureMax: ").append(toIndentedString(airTemperatureMax)).append("\n");
    sb.append("    airTemperatureMin: ").append(toIndentedString(airTemperatureMin)).append("\n");
    sb.append("    precipitationAmount: ").append(toIndentedString(precipitationAmount)).append("\n");
    sb.append("    precipitationAmountMax: ").append(toIndentedString(precipitationAmountMax)).append("\n");
    sb.append("    precipitationAmountMin: ").append(toIndentedString(precipitationAmountMin)).append("\n");
    sb.append("    probabilityOfPrecipitation: ").append(toIndentedString(probabilityOfPrecipitation)).append("\n");
    sb.append("    probabilityOfThunder: ").append(toIndentedString(probabilityOfThunder)).append("\n");
    sb.append("    ultravioletIndexClearSkyMax: ").append(toIndentedString(ultravioletIndexClearSkyMax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

