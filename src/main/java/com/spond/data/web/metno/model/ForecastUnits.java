/*
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spond.data.web.metno.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.processing.Generated;

/**
 * ForecastUnits
 */
@JsonPropertyOrder({
  ForecastUnits.JSON_PROPERTY_AIR_PRESSURE_AT_SEA_LEVEL,
  ForecastUnits.JSON_PROPERTY_AIR_TEMPERATURE,
  ForecastUnits.JSON_PROPERTY_AIR_TEMPERATURE_MAX,
  ForecastUnits.JSON_PROPERTY_AIR_TEMPERATURE_MIN,
  ForecastUnits.JSON_PROPERTY_CLOUD_AREA_FRACTION,
  ForecastUnits.JSON_PROPERTY_CLOUD_AREA_FRACTION_HIGH,
  ForecastUnits.JSON_PROPERTY_CLOUD_AREA_FRACTION_LOW,
  ForecastUnits.JSON_PROPERTY_CLOUD_AREA_FRACTION_MEDIUM,
  ForecastUnits.JSON_PROPERTY_DEW_POINT_TEMPERATURE,
  ForecastUnits.JSON_PROPERTY_FOG_AREA_FRACTION,
  ForecastUnits.JSON_PROPERTY_PRECIPITATION_AMOUNT,
  ForecastUnits.JSON_PROPERTY_PRECIPITATION_AMOUNT_MAX,
  ForecastUnits.JSON_PROPERTY_PRECIPITATION_AMOUNT_MIN,
  ForecastUnits.JSON_PROPERTY_PROBABILITY_OF_PRECIPITATION,
  ForecastUnits.JSON_PROPERTY_PROBABILITY_OF_THUNDER,
  ForecastUnits.JSON_PROPERTY_RELATIVE_HUMIDITY,
  ForecastUnits.JSON_PROPERTY_ULTRAVIOLET_INDEX_CLEAR_SKY_MAX,
  ForecastUnits.JSON_PROPERTY_WIND_FROM_DIRECTION,
  ForecastUnits.JSON_PROPERTY_WIND_SPEED,
  ForecastUnits.JSON_PROPERTY_WIND_SPEED_OF_GUST
})
@Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-09T15:59:38.720538+02:00[Europe/Oslo]")
public class ForecastUnits {
  public static final String JSON_PROPERTY_AIR_PRESSURE_AT_SEA_LEVEL = "air_pressure_at_sea_level";
  private String airPressureAtSeaLevel;

  public static final String JSON_PROPERTY_AIR_TEMPERATURE = "air_temperature";
  private String airTemperature;

  public static final String JSON_PROPERTY_AIR_TEMPERATURE_MAX = "air_temperature_max";
  private String airTemperatureMax;

  public static final String JSON_PROPERTY_AIR_TEMPERATURE_MIN = "air_temperature_min";
  private String airTemperatureMin;

  public static final String JSON_PROPERTY_CLOUD_AREA_FRACTION = "cloud_area_fraction";
  private String cloudAreaFraction;

  public static final String JSON_PROPERTY_CLOUD_AREA_FRACTION_HIGH = "cloud_area_fraction_high";
  private String cloudAreaFractionHigh;

  public static final String JSON_PROPERTY_CLOUD_AREA_FRACTION_LOW = "cloud_area_fraction_low";
  private String cloudAreaFractionLow;

  public static final String JSON_PROPERTY_CLOUD_AREA_FRACTION_MEDIUM = "cloud_area_fraction_medium";
  private String cloudAreaFractionMedium;

  public static final String JSON_PROPERTY_DEW_POINT_TEMPERATURE = "dew_point_temperature";
  private String dewPointTemperature;

  public static final String JSON_PROPERTY_FOG_AREA_FRACTION = "fog_area_fraction";
  private String fogAreaFraction;

  public static final String JSON_PROPERTY_PRECIPITATION_AMOUNT = "precipitation_amount";
  private String precipitationAmount;

  public static final String JSON_PROPERTY_PRECIPITATION_AMOUNT_MAX = "precipitation_amount_max";
  private String precipitationAmountMax;

  public static final String JSON_PROPERTY_PRECIPITATION_AMOUNT_MIN = "precipitation_amount_min";
  private String precipitationAmountMin;

  public static final String JSON_PROPERTY_PROBABILITY_OF_PRECIPITATION = "probability_of_precipitation";
  private String probabilityOfPrecipitation;

  public static final String JSON_PROPERTY_PROBABILITY_OF_THUNDER = "probability_of_thunder";
  private String probabilityOfThunder;

  public static final String JSON_PROPERTY_RELATIVE_HUMIDITY = "relative_humidity";
  private String relativeHumidity;

  public static final String JSON_PROPERTY_ULTRAVIOLET_INDEX_CLEAR_SKY_MAX = "ultraviolet_index_clear_sky_max";
  private String ultravioletIndexClearSkyMax;

  public static final String JSON_PROPERTY_WIND_FROM_DIRECTION = "wind_from_direction";
  private String windFromDirection;

  public static final String JSON_PROPERTY_WIND_SPEED = "wind_speed";
  private String windSpeed;

  public static final String JSON_PROPERTY_WIND_SPEED_OF_GUST = "wind_speed_of_gust";
  private String windSpeedOfGust;


  public ForecastUnits airPressureAtSeaLevel(String airPressureAtSeaLevel) {
    
    this.airPressureAtSeaLevel = airPressureAtSeaLevel;
    return this;
  }

   /**
   * Get airPressureAtSeaLevel
   * @return airPressureAtSeaLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "hPa", value = "")
  @JsonProperty(JSON_PROPERTY_AIR_PRESSURE_AT_SEA_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAirPressureAtSeaLevel() {
    return airPressureAtSeaLevel;
  }


  public void setAirPressureAtSeaLevel(String airPressureAtSeaLevel) {
    this.airPressureAtSeaLevel = airPressureAtSeaLevel;
  }


  public ForecastUnits airTemperature(String airTemperature) {
    
    this.airTemperature = airTemperature;
    return this;
  }

   /**
   * Get airTemperature
   * @return airTemperature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C", value = "")
  @JsonProperty(JSON_PROPERTY_AIR_TEMPERATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAirTemperature() {
    return airTemperature;
  }


  public void setAirTemperature(String airTemperature) {
    this.airTemperature = airTemperature;
  }


  public ForecastUnits airTemperatureMax(String airTemperatureMax) {
    
    this.airTemperatureMax = airTemperatureMax;
    return this;
  }

   /**
   * Get airTemperatureMax
   * @return airTemperatureMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C", value = "")
  @JsonProperty(JSON_PROPERTY_AIR_TEMPERATURE_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAirTemperatureMax() {
    return airTemperatureMax;
  }


  public void setAirTemperatureMax(String airTemperatureMax) {
    this.airTemperatureMax = airTemperatureMax;
  }


  public ForecastUnits airTemperatureMin(String airTemperatureMin) {
    
    this.airTemperatureMin = airTemperatureMin;
    return this;
  }

   /**
   * Get airTemperatureMin
   * @return airTemperatureMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C", value = "")
  @JsonProperty(JSON_PROPERTY_AIR_TEMPERATURE_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAirTemperatureMin() {
    return airTemperatureMin;
  }


  public void setAirTemperatureMin(String airTemperatureMin) {
    this.airTemperatureMin = airTemperatureMin;
  }


  public ForecastUnits cloudAreaFraction(String cloudAreaFraction) {
    
    this.cloudAreaFraction = cloudAreaFraction;
    return this;
  }

   /**
   * Get cloudAreaFraction
   * @return cloudAreaFraction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_CLOUD_AREA_FRACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCloudAreaFraction() {
    return cloudAreaFraction;
  }


  public void setCloudAreaFraction(String cloudAreaFraction) {
    this.cloudAreaFraction = cloudAreaFraction;
  }


  public ForecastUnits cloudAreaFractionHigh(String cloudAreaFractionHigh) {
    
    this.cloudAreaFractionHigh = cloudAreaFractionHigh;
    return this;
  }

   /**
   * Get cloudAreaFractionHigh
   * @return cloudAreaFractionHigh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_CLOUD_AREA_FRACTION_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCloudAreaFractionHigh() {
    return cloudAreaFractionHigh;
  }


  public void setCloudAreaFractionHigh(String cloudAreaFractionHigh) {
    this.cloudAreaFractionHigh = cloudAreaFractionHigh;
  }


  public ForecastUnits cloudAreaFractionLow(String cloudAreaFractionLow) {
    
    this.cloudAreaFractionLow = cloudAreaFractionLow;
    return this;
  }

   /**
   * Get cloudAreaFractionLow
   * @return cloudAreaFractionLow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_CLOUD_AREA_FRACTION_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCloudAreaFractionLow() {
    return cloudAreaFractionLow;
  }


  public void setCloudAreaFractionLow(String cloudAreaFractionLow) {
    this.cloudAreaFractionLow = cloudAreaFractionLow;
  }


  public ForecastUnits cloudAreaFractionMedium(String cloudAreaFractionMedium) {
    
    this.cloudAreaFractionMedium = cloudAreaFractionMedium;
    return this;
  }

   /**
   * Get cloudAreaFractionMedium
   * @return cloudAreaFractionMedium
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_CLOUD_AREA_FRACTION_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCloudAreaFractionMedium() {
    return cloudAreaFractionMedium;
  }


  public void setCloudAreaFractionMedium(String cloudAreaFractionMedium) {
    this.cloudAreaFractionMedium = cloudAreaFractionMedium;
  }


  public ForecastUnits dewPointTemperature(String dewPointTemperature) {
    
    this.dewPointTemperature = dewPointTemperature;
    return this;
  }

   /**
   * Get dewPointTemperature
   * @return dewPointTemperature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C", value = "")
  @JsonProperty(JSON_PROPERTY_DEW_POINT_TEMPERATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDewPointTemperature() {
    return dewPointTemperature;
  }


  public void setDewPointTemperature(String dewPointTemperature) {
    this.dewPointTemperature = dewPointTemperature;
  }


  public ForecastUnits fogAreaFraction(String fogAreaFraction) {
    
    this.fogAreaFraction = fogAreaFraction;
    return this;
  }

   /**
   * Get fogAreaFraction
   * @return fogAreaFraction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_FOG_AREA_FRACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFogAreaFraction() {
    return fogAreaFraction;
  }


  public void setFogAreaFraction(String fogAreaFraction) {
    this.fogAreaFraction = fogAreaFraction;
  }


  public ForecastUnits precipitationAmount(String precipitationAmount) {
    
    this.precipitationAmount = precipitationAmount;
    return this;
  }

   /**
   * Get precipitationAmount
   * @return precipitationAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mm", value = "")
  @JsonProperty(JSON_PROPERTY_PRECIPITATION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrecipitationAmount() {
    return precipitationAmount;
  }


  public void setPrecipitationAmount(String precipitationAmount) {
    this.precipitationAmount = precipitationAmount;
  }


  public ForecastUnits precipitationAmountMax(String precipitationAmountMax) {
    
    this.precipitationAmountMax = precipitationAmountMax;
    return this;
  }

   /**
   * Get precipitationAmountMax
   * @return precipitationAmountMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mm", value = "")
  @JsonProperty(JSON_PROPERTY_PRECIPITATION_AMOUNT_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrecipitationAmountMax() {
    return precipitationAmountMax;
  }


  public void setPrecipitationAmountMax(String precipitationAmountMax) {
    this.precipitationAmountMax = precipitationAmountMax;
  }


  public ForecastUnits precipitationAmountMin(String precipitationAmountMin) {
    
    this.precipitationAmountMin = precipitationAmountMin;
    return this;
  }

   /**
   * Get precipitationAmountMin
   * @return precipitationAmountMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mm", value = "")
  @JsonProperty(JSON_PROPERTY_PRECIPITATION_AMOUNT_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrecipitationAmountMin() {
    return precipitationAmountMin;
  }


  public void setPrecipitationAmountMin(String precipitationAmountMin) {
    this.precipitationAmountMin = precipitationAmountMin;
  }


  public ForecastUnits probabilityOfPrecipitation(String probabilityOfPrecipitation) {
    
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
    return this;
  }

   /**
   * Get probabilityOfPrecipitation
   * @return probabilityOfPrecipitation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_PROBABILITY_OF_PRECIPITATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProbabilityOfPrecipitation() {
    return probabilityOfPrecipitation;
  }


  public void setProbabilityOfPrecipitation(String probabilityOfPrecipitation) {
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
  }


  public ForecastUnits probabilityOfThunder(String probabilityOfThunder) {
    
    this.probabilityOfThunder = probabilityOfThunder;
    return this;
  }

   /**
   * Get probabilityOfThunder
   * @return probabilityOfThunder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_PROBABILITY_OF_THUNDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProbabilityOfThunder() {
    return probabilityOfThunder;
  }


  public void setProbabilityOfThunder(String probabilityOfThunder) {
    this.probabilityOfThunder = probabilityOfThunder;
  }


  public ForecastUnits relativeHumidity(String relativeHumidity) {
    
    this.relativeHumidity = relativeHumidity;
    return this;
  }

   /**
   * Get relativeHumidity
   * @return relativeHumidity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "%", value = "")
  @JsonProperty(JSON_PROPERTY_RELATIVE_HUMIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRelativeHumidity() {
    return relativeHumidity;
  }


  public void setRelativeHumidity(String relativeHumidity) {
    this.relativeHumidity = relativeHumidity;
  }


  public ForecastUnits ultravioletIndexClearSkyMax(String ultravioletIndexClearSkyMax) {
    
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
    return this;
  }

   /**
   * Get ultravioletIndexClearSkyMax
   * @return ultravioletIndexClearSkyMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_ULTRAVIOLET_INDEX_CLEAR_SKY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUltravioletIndexClearSkyMax() {
    return ultravioletIndexClearSkyMax;
  }


  public void setUltravioletIndexClearSkyMax(String ultravioletIndexClearSkyMax) {
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
  }


  public ForecastUnits windFromDirection(String windFromDirection) {
    
    this.windFromDirection = windFromDirection;
    return this;
  }

   /**
   * Get windFromDirection
   * @return windFromDirection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "degrees", value = "")
  @JsonProperty(JSON_PROPERTY_WIND_FROM_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWindFromDirection() {
    return windFromDirection;
  }


  public void setWindFromDirection(String windFromDirection) {
    this.windFromDirection = windFromDirection;
  }


  public ForecastUnits windSpeed(String windSpeed) {
    
    this.windSpeed = windSpeed;
    return this;
  }

   /**
   * Get windSpeed
   * @return windSpeed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "m/s", value = "")
  @JsonProperty(JSON_PROPERTY_WIND_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWindSpeed() {
    return windSpeed;
  }


  public void setWindSpeed(String windSpeed) {
    this.windSpeed = windSpeed;
  }


  public ForecastUnits windSpeedOfGust(String windSpeedOfGust) {
    
    this.windSpeedOfGust = windSpeedOfGust;
    return this;
  }

   /**
   * Get windSpeedOfGust
   * @return windSpeedOfGust
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "m/s", value = "")
  @JsonProperty(JSON_PROPERTY_WIND_SPEED_OF_GUST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWindSpeedOfGust() {
    return windSpeedOfGust;
  }


  public void setWindSpeedOfGust(String windSpeedOfGust) {
    this.windSpeedOfGust = windSpeedOfGust;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastUnits forecastUnits = (ForecastUnits) o;
    return Objects.equals(this.airPressureAtSeaLevel, forecastUnits.airPressureAtSeaLevel) &&
        Objects.equals(this.airTemperature, forecastUnits.airTemperature) &&
        Objects.equals(this.airTemperatureMax, forecastUnits.airTemperatureMax) &&
        Objects.equals(this.airTemperatureMin, forecastUnits.airTemperatureMin) &&
        Objects.equals(this.cloudAreaFraction, forecastUnits.cloudAreaFraction) &&
        Objects.equals(this.cloudAreaFractionHigh, forecastUnits.cloudAreaFractionHigh) &&
        Objects.equals(this.cloudAreaFractionLow, forecastUnits.cloudAreaFractionLow) &&
        Objects.equals(this.cloudAreaFractionMedium, forecastUnits.cloudAreaFractionMedium) &&
        Objects.equals(this.dewPointTemperature, forecastUnits.dewPointTemperature) &&
        Objects.equals(this.fogAreaFraction, forecastUnits.fogAreaFraction) &&
        Objects.equals(this.precipitationAmount, forecastUnits.precipitationAmount) &&
        Objects.equals(this.precipitationAmountMax, forecastUnits.precipitationAmountMax) &&
        Objects.equals(this.precipitationAmountMin, forecastUnits.precipitationAmountMin) &&
        Objects.equals(this.probabilityOfPrecipitation, forecastUnits.probabilityOfPrecipitation) &&
        Objects.equals(this.probabilityOfThunder, forecastUnits.probabilityOfThunder) &&
        Objects.equals(this.relativeHumidity, forecastUnits.relativeHumidity) &&
        Objects.equals(this.ultravioletIndexClearSkyMax, forecastUnits.ultravioletIndexClearSkyMax) &&
        Objects.equals(this.windFromDirection, forecastUnits.windFromDirection) &&
        Objects.equals(this.windSpeed, forecastUnits.windSpeed) &&
        Objects.equals(this.windSpeedOfGust, forecastUnits.windSpeedOfGust);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airPressureAtSeaLevel, airTemperature, airTemperatureMax, airTemperatureMin, cloudAreaFraction, cloudAreaFractionHigh, cloudAreaFractionLow, cloudAreaFractionMedium, dewPointTemperature, fogAreaFraction, precipitationAmount, precipitationAmountMax, precipitationAmountMin, probabilityOfPrecipitation, probabilityOfThunder, relativeHumidity, ultravioletIndexClearSkyMax, windFromDirection, windSpeed, windSpeedOfGust);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastUnits {\n");
    sb.append("    airPressureAtSeaLevel: ").append(toIndentedString(airPressureAtSeaLevel)).append("\n");
    sb.append("    airTemperature: ").append(toIndentedString(airTemperature)).append("\n");
    sb.append("    airTemperatureMax: ").append(toIndentedString(airTemperatureMax)).append("\n");
    sb.append("    airTemperatureMin: ").append(toIndentedString(airTemperatureMin)).append("\n");
    sb.append("    cloudAreaFraction: ").append(toIndentedString(cloudAreaFraction)).append("\n");
    sb.append("    cloudAreaFractionHigh: ").append(toIndentedString(cloudAreaFractionHigh)).append("\n");
    sb.append("    cloudAreaFractionLow: ").append(toIndentedString(cloudAreaFractionLow)).append("\n");
    sb.append("    cloudAreaFractionMedium: ").append(toIndentedString(cloudAreaFractionMedium)).append("\n");
    sb.append("    dewPointTemperature: ").append(toIndentedString(dewPointTemperature)).append("\n");
    sb.append("    fogAreaFraction: ").append(toIndentedString(fogAreaFraction)).append("\n");
    sb.append("    precipitationAmount: ").append(toIndentedString(precipitationAmount)).append("\n");
    sb.append("    precipitationAmountMax: ").append(toIndentedString(precipitationAmountMax)).append("\n");
    sb.append("    precipitationAmountMin: ").append(toIndentedString(precipitationAmountMin)).append("\n");
    sb.append("    probabilityOfPrecipitation: ").append(toIndentedString(probabilityOfPrecipitation)).append("\n");
    sb.append("    probabilityOfThunder: ").append(toIndentedString(probabilityOfThunder)).append("\n");
    sb.append("    relativeHumidity: ").append(toIndentedString(relativeHumidity)).append("\n");
    sb.append("    ultravioletIndexClearSkyMax: ").append(toIndentedString(ultravioletIndexClearSkyMax)).append("\n");
    sb.append("    windFromDirection: ").append(toIndentedString(windFromDirection)).append("\n");
    sb.append("    windSpeed: ").append(toIndentedString(windSpeed)).append("\n");
    sb.append("    windSpeedOfGust: ").append(toIndentedString(windSpeedOfGust)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

